#!/usr/bin/env zsh

dir_name=$( cd $( dirname $0 ); pwd | sed 's/^.*\///' )
do_name=$( basename $0 )
work_name=${dir_name:3}
env_path=${ZSH_COMPLETION_KIT_BASE_DIR}/etc/${work_name}.env
[[ -f $env_path ]] && . $env_path

function printUsage() {
	echo "Usage: $do_name [args]"
	func_sub_do_help
}

function func_sub_do() {
	if [[ "$1" = "-v" ]]; then
		tmp_filepath=/tmp/$0.$$
		echo "repo_name\tbranch_name\trepo_dir\tgitURL" > $tmp_filepath
		cat ${GIT_REPO_LIST} | grep -v '^#' | grep -v '^$' | while read l; do
			repo_name=$( echo $l | cut -f1 )
			branch_name=$( echo $l | cut -f2 ) ; [[ $branch_name = "" ]] && branch_name=N/A
			repo_dir=$( echo $l | cut -f3 )
			giturl=$( echo $l | cut -f4 )
			echo "${repo_name}\t${branch_name}\t${repo_dir}\t${giturl}" >> $tmp_filepath
		done
		cat $tmp_filepath | column -t -s $'\t'
		rm $tmp_filepath
	else
		cat ${GIT_REPO_LIST} | grep -v '^#' | grep -v '^$' | cut -f1
	fi
	
	exit 0
}

function func_sub_return_completion_do_arg1() {
	[[ $1 = "key" ]] && echo "verbose"
	[[ $1 = "values" ]] && echo "-v"
}
# concrete function to output this method description for indirect execution(called from completion _XXX_do script/function)
# ACTION: Update code
#
function func_sub_do_desc() {
	# here output description for this do method
	echo "show repository list on local"
}
function func_sub_do_help() {
	echo "    arg[1]: -v(optional)"
}

#export_functions='func_sub_do func_sub_do_desc func_sub_do_help func_sub_return_completion_do_arg1 func_sub_return_completion_do_arg2 func_sub_return_completion_do_arg3 func_sub_return_completion_do_arg4 func_sub_return_completion_do_arg5 func_sub_return_completion_do_arg6 func_sub_return_completion_do_arg7 func_sub_return_completion_do_arg8 func_sub_return_completion_do_arg9'

export_functions='func_sub_do func_sub_do_desc func_sub_do_help func_sub_return_completion_do_arg1'
export -f $export_functions
. $( dirname $0 )/../.do/do.super $1 $2 $3 $4 $5 $6 $7 $8 $9
unset $export_functions

